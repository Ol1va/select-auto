{"version":3,"sources":["Title.js","InputArea.js","Autocomplete.js","SelectAuto.js","App.js","index.js"],"names":["titleStyles","paddingBottom","fontSize","Title","props","label","react_default","a","createElement","style","InputArea","value","onChange","gutterTop","other","Object","objectWithoutProperties","inputProps","assign","marginTop","src_Title","width","padding","listContainerStyles","maxHeight","overflow","boxShadow","position","zIndex","listStyles","listStyleType","paddingInlineStart","marginBlockStart","marginBlockEnd","listItemStyles","cursor","ListItem","highlighted","selected","objectSpread","backgroundColor","fontWeight","ControlledAutocomplete","onInputChange","onInputClick","items","rest","downshift_esm","_ref","data","condition","getInputProps","getItemProps","isOpen","inputValue","highlightedIndex","selectedItem","flexGrow","src_InputArea","onClick","onBlur","filter","item","toLowerCase","includes","map","index","key","Autocomplete","suggestions","_useState","useState","_useState2","slicedToArray","state","setState","useEffect","length","clearSelection","onStateChange","changes","_changes$selectedItem","_changes$isOpen","_changes$inputValue","event","target","nextState","itemToString","SelectAuto","carMarks","setCarMarks","_useState3","_useState4","carModels","setCarModels","_useState5","selectedValue","_useState6","mark","setMark","_useState7","_useState8","model","setModel","isMounted","asyncToGenerator","regenerator_default","_callee","response","wrap","_context","prev","next","fetch","method","sent","json","stop","apply","this","arguments","getData","isAllFilled","trim","markSelected","_model$selectedValue","modelSelected","isModelInputOpen","src_Autocomplete","_ref2","_callee2","_context2","isEmptyOrNull","App","setData","display","flexDirection","borderRadius","margin","src_SelectAuto","JSON","stringify","marginLeft","marginRight","whiteSpace","render","src_App","document","getElementById"],"mappings":"mNAGMA,EAAc,CAClBC,cAAe,EACfC,SAAU,UAmBGC,MAhBf,SAAeC,GAAO,IACZC,EAAUD,EAAVC,MAER,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAOT,GACVM,EAAAC,EAAAC,cAAA,aACIH,KCuBKK,MAhCf,SAAmBN,GAAO,IAChBC,EAAgDD,EAAhDC,MAAOM,EAAyCP,EAAzCO,MAAOC,EAAkCR,EAAlCQ,SAAUC,EAAwBT,EAAxBS,UAAcC,EADtBC,OAAAC,EAAA,EAAAD,CACgCX,EADhC,0CAGlBa,EAAaF,OAAOG,OACxB,GACA,CAAEP,MAAOA,IAAW,GACpB,CAAEC,SAAUA,IAAc,GAC1BE,GAGF,OACER,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEU,UAAWN,EAAY,GAAK,IACxCP,EAAAC,EAAAC,cAACY,EAAD,CAAOf,MAAOA,IACdC,EAAAC,EAAAC,cAAA,QAAAO,OAAAG,OAAA,GACMD,EADN,CAEER,MAAO,CACLY,MAAO,OACPnB,SAAU,OACVoB,QAAS,QClBbC,EAAsB,CAC1BC,UAAW,QACXC,SAAU,SACVJ,MAAO,yBACPK,UAAW,uGACXC,SAAU,WACVC,OAAQ,MAGJC,EAAa,CACjBC,cAAe,OACfC,mBAAoB,EACpBC,iBAAkB,EAClBC,eAAgB,GAGZC,EAAiB,CACrBC,OAAQ,UACRb,QAAS,GACTpB,SAAU,QAGZ,SAASkC,EAAShC,GAAO,IACfO,EAA2CP,EAA3CO,MAAO0B,EAAoCjC,EAApCiC,YAAaC,EAAuBlC,EAAvBkC,SAAaxB,EADlBC,OAAAC,EAAA,EAAAD,CAC4BX,EAD5B,oCAGvB,OACEE,EAAAC,EAAAC,cAAA,KAAAO,OAAAG,OAAA,CACET,MAAKM,OAAAwB,EAAA,EAAAxB,CAAA,CACHyB,gBAAiBH,EAAc,YAAc,QAC7CI,WAAYH,EAAW,OAAS,UAC7BJ,IAEApB,GAEHH,GAWR,SAAS+B,EAAuBtC,GAAO,IAEnCuC,EAKYvC,EALZuC,cACAC,EAIYxC,EAJZwC,aACAC,EAGYzC,EAHZyC,MACAxC,EAEYD,EAFZC,MACAQ,EACYT,EADZS,UACGiC,EAPgC/B,OAAAC,EAAA,EAAAD,CAOvBX,EAPuB,8DAarC,OACEE,EAAAC,EAAAC,cAACuC,EAAA,EAAcD,EACZ,SAAAE,GAAA,IANkBC,EAAMC,EAOvBC,EADDH,EACCG,cACAC,EAFDJ,EAECI,aACAC,EAHDL,EAGCK,OACAC,EAJDN,EAICM,WACAC,EALDP,EAKCO,iBACAC,EANDR,EAMCQ,aAND,OAQClD,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVgD,SAAU,EACV9B,SAAU,aAEVrB,EAAAC,EAAAC,cAACkD,EAAD3C,OAAAG,OAAA,CACEb,MAAOA,EACPQ,UAAWA,GACPsC,EAAc,CAChBQ,QAASf,EACThC,SAAU+B,EACViB,OAAQjB,MAGVU,GACA/C,EAAAC,EAAAC,cAAA,OAAKC,MAAOc,GACVjB,EAAAC,EAAAC,cAAA,MAAIC,MAAOoB,IA7BAoB,EA8BOJ,EA9BDK,EA8BQI,EA7B5BL,EAAKY,OAAO,SAAAC,GAAI,OAAKZ,GAAaY,EAAKnD,MAAMoD,cAAcC,SAASd,EAAUa,kBA8BtEE,IAAI,SAACH,EAAMI,GAAP,OACH5D,EAAAC,EAAAC,cAAC4B,EAADrB,OAAAG,OAAA,CACEiD,IAAKL,EAAKnD,MACVA,MAAOmD,EAAKnD,MACZ0B,YAAakB,IAAqBW,EAClC5B,SAAUkB,IAAiBM,GACtBV,EAAa,CAAEU,kBAyG3BM,MApFf,SAAsBhE,GAAO,IACnBC,EAA4CD,EAA5CC,MAAOgE,EAAqCjE,EAArCiE,YAAazD,EAAwBR,EAAxBQ,SAAUC,EAAcT,EAAdS,UADXyD,EAECC,mBAAS,CACnCf,aAAc,GACdF,WAAY,GACZD,QAAQ,IALiBmB,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAAuD,EAAA,GAEnBI,EAFmBF,EAAA,GAEZG,EAFYH,EAAA,GAQ3BI,oBAAU,WACmB,IAAvBP,EAAYQ,QACdC,KAED,CAAET,IAEL,IAsCMS,EAAiB,WACrBH,EAAS,CACPnB,aAAc,GACdF,WAAY,GACZD,QAAQ,KAIZ,OACE/C,EAAAC,EAAAC,cAACkC,EAAD,CACEG,MAAOwB,EACPhB,OAAQqB,EAAMrB,OACdG,aAAckB,EAAMlB,aACpBF,WAAYoB,EAAMpB,WAClB1C,SApDuB,SAAA4C,GACrBA,IAAiBkB,EAAMlB,eACzBmB,EAAS5D,OAAAwB,EAAA,EAAAxB,CAAA,GACJ2D,EADG,CAENlB,aAAcA,EACdH,QAAQ,KAEVzC,EAAS4C,KA8CTuB,cA1CsB,SAAAC,GAAW,IAAAC,EAK/BD,EAHFxB,oBAFiC,IAAAyB,EAElBP,EAAMlB,aAFYyB,EAAAC,EAK/BF,EAFF3B,cAHiC,IAAA6B,EAGxBR,EAAMrB,OAHkB6B,EAAAC,EAK/BH,EADF1B,kBAJiC,IAAA6B,EAIpBT,EAAMpB,WAJc6B,EAMnCR,EAAS,CACPnB,eACAH,SACAC,gBAkCAX,cA9BsB,SAAAyC,GACxB,IAAMzE,EAAQyE,EAAMC,OAAO1E,MACvB2E,EAASvE,OAAAwB,EAAA,EAAAxB,CAAA,GAAO2D,GACpBY,EAAUhC,WAAa3C,EACnB0D,EAAYL,SAASrD,KACvB2E,EAAU9B,aAAe7C,GAE3BgE,EAASW,IAwBP1C,aArBqB,WACvB+B,EAAS5D,OAAAwB,EAAA,EAAAxB,CAAA,GAAK2D,EAAN,CAAarB,QAAQ,MAqB3BhD,MAAOA,EACPQ,UAAWA,EACX0E,aAAe,SAAAzB,GAAI,OAAKA,EAAOA,EAAKnD,MAAQ,OCbnC6E,MA3Kf,SAAoBpF,GAAO,IACjBQ,EAAaR,EAAbQ,SADiB0D,EAESC,mBAAS,IAFlBC,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAAuD,EAAA,GAEjBmB,EAFiBjB,EAAA,GAEPkB,EAFOlB,EAAA,GAAAmB,EAGWpB,mBAAS,IAHpBqB,EAAA7E,OAAA0D,EAAA,EAAA1D,CAAA4E,EAAA,GAGjBE,EAHiBD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAICxB,mBAAS,CACjCyB,cAAe,KACf1C,WAAY,OANW2C,EAAAlF,OAAA0D,EAAA,EAAA1D,CAAAgF,EAAA,GAIjBG,EAJiBD,EAAA,GAIXE,EAJWF,EAAA,GAAAG,EAQG7B,mBAAS,CACnCyB,cAAe,KACf1C,WAAY,OAVW+C,EAAAtF,OAAA0D,EAAA,EAAA1D,CAAAqF,EAAA,GAQjBE,EARiBD,EAAA,GAQVE,EARUF,EAAA,GAczBzB,oBAAU,WACR,IAAI4B,GAAY,EAchB,OAZa,eAAAxD,EAAAjC,OAAA0F,EAAA,EAAA1F,CAAA2F,EAAAnG,EAAA2F,KAAG,SAAAS,IAAA,IAAAC,EAAA3D,EAAA,OAAAyD,EAAAnG,EAAAsG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSC,MACrB,uEACA,CAAEC,OAAQ,QAHE,cACRN,EADQE,EAAAK,KAAAL,EAAAE,KAAA,EAKKJ,EAASQ,OALd,OAKRnE,EALQ6D,EAAAK,KAMVX,GACFd,EAAYzC,EAAKA,MAPL,wBAAA6D,EAAAO,SAAAV,MAAH,yBAAA3D,EAAAsE,MAAAC,KAAAC,YAAA,EAUbC,GAEO,kBAAMjB,GAAY,IACxB,IAGH5B,oBAAU,WACR,IAAI8C,GAAc,EAWlB,GATIxB,EAAKF,eAAiBM,EAAMN,eACL,OAApBE,EAAK5C,aAAwB4C,EAAK5C,WAAWqE,QACxB,OAArBrB,EAAMhD,aAAwBgD,EAAMhD,WAAWqE,UAC9CD,GAAc,GAIpBA,GAAc,EAEZA,EAAa,CACf,IAAIzE,EAAO,GACa,OAApBiD,EAAK5C,YACPL,EAAK2E,aAAe1B,EAAKF,cAAcrF,MACvCsC,EAAKiD,KAAOA,EAAK5C,YAGjBL,EAAKiD,KAAOA,EAAKF,cAAcrF,MAPlB,IAAAkH,EAUYvB,EAAMN,cAAzBrF,EAVOkH,EAUPlH,MAAUmC,EAVH/B,OAAAC,EAAA,EAAAD,CAAA8G,EAAA,WAWf9G,OAAOG,OAAO+B,EAAMH,GAEK,OAArBwD,EAAMhD,YACRL,EAAK6E,cAAgBnH,EACrBsC,EAAKqD,MAAQA,EAAMhD,YAGnBL,EAAKqD,MAAQ3F,EAEfC,EAASqC,QAGTrC,EAAS,KAEV,CAACsF,EAAMI,EAAO1F,IAEjB,IAkDMmH,IAAmB7B,EAAKF,gBACN,OAApBE,EAAK5C,YACH4C,EAAK5C,WAAWqE,QAItB,OACErH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwH,EAAD,CACE3H,MAAM,+IACNgE,YAAaoB,EACb7E,SAzCyB,SAAAkD,GAC7ByC,EAAS,CACPP,cAAe,KACf1C,WAAY,OAEdwC,EAAa,IAEA,eAAAmC,EAAAlH,OAAA0F,EAAA,EAAA1F,CAAA2F,EAAAnG,EAAA2F,KAAG,SAAAgC,IAAA,IAAAtB,EAAA3D,EAAA,OAAAyD,EAAAnG,EAAAsG,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACSC,MACrB,8EAAgFnD,EAAKnD,MACrF,CAAEuG,OAAQ,QAHE,cACRN,EADQuB,EAAAhB,KAAAgB,EAAAnB,KAAA,EAKKJ,EAASQ,OALd,OAKRnE,EALQkF,EAAAhB,KAMdrB,EAAa7C,EAAKA,MANJ,wBAAAkF,EAAAd,SAAAa,MAAH,yBAAAD,EAAAX,MAAAC,KAAAC,YAAA,EAQbC,GAEAtB,EAAQ,CACNH,cAAelC,EACfR,WAAYQ,EAAKnD,MAAMqD,SAAS,uEAAkB,GAAK,UAyBjC,OAApBkC,EAAK5C,YACLhD,EAAAC,EAAAC,cAACkD,EAAD,CACErD,MAAM,yIACNM,MAAOuF,EAAK5C,WACZ1C,SAhEiB,SAAAwE,GACvB,IAAMzE,EAAQyE,EAAMC,OAAO1E,OALP,SAAAA,GACpB,OAAQA,IAAUA,EAAMgH,QAKpBS,CAAczH,IAChB4F,EAAS,CACPP,cAAe,KACf1C,WAAY,OAGhB6C,EAAQpF,OAAAwB,EAAA,EAAAxB,CAAA,GAAKmF,EAAN,CAAY5C,WAAY3C,MAyDzBE,WAAS,IAIZkH,GACCzH,EAAAC,EAAAC,cAACwH,EAAD,CACE3H,MAAM,qJACNgE,YAAawB,EACbjF,SAlCwB,SAAAkD,GAC9ByC,EAAS,CACPP,cAAelC,EACfR,WAAYQ,EAAKnD,MAAMqD,SAAS,6EAAmB,GAAK,QAgCpDnD,WAAS,IAIU,OAArByF,EAAMhD,YACNhD,EAAAC,EAAAC,cAACkD,EAAD,CACErD,MAAM,+IAENM,MAAO2F,EAAMhD,WACb1C,SAxEkB,SAAAwE,GACxB,IAAMzE,EAAQyE,EAAMC,OAAO1E,MAC3B4F,EAASxF,OAAAwB,EAAA,EAAAxB,CAAA,GAAKuF,EAAN,CAAahD,WAAY3C,MAuE3BE,WAAS,MCjIJwH,MAjCf,WAAe,IAAA/D,EACaC,mBAAS,IADtBC,EAAAzD,OAAA0D,EAAA,EAAA1D,CAAAuD,EAAA,GACLrB,EADKuB,EAAA,GACC8D,EADD9D,EAAA,GAOb,OACElE,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACV8H,QAAS,OACTC,cAAe,WAEflI,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVY,MAAO,MACPoH,aAAc,EACd/G,UAAW,uGACXJ,QAAS,GACToH,OAAQ,SAERpI,EAAAC,EAAAC,cAACmI,EAAD,CAAY/H,SAhBG,SAAAqC,GACnBqF,EAAQM,KAAKC,UAAU5F,EAAM,KAAM,WAiBjC3C,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACVU,UAAW,GACX2H,WAAY,OACZC,YAAa,OACbC,WAAY,QAEV/F,KC1BVgG,iBACE3I,EAAAC,EAAAC,cAAC0I,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.f2b14d7e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst titleStyles = {\n  paddingBottom: 8,\n  fontSize: '1.2rem'\n}\n\nfunction Title(props) {\n  const { label } = props;\n\n  return (\n    <div style={titleStyles}>\n      <label>\n        { label }\n      </label>\n    </div>\n  );\n}\n\nTitle.propTypes = {\n  label: PropTypes.string.isRequired\n}\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from './Title';\n\nfunction InputArea(props) {\n  const { label, value, onChange, gutterTop, ...other } = props;\n\n  const inputProps = Object.assign(\n    {},\n    { value: value } || {},\n    { onChange: onChange } || {},\n    other\n  );\n\n  return (\n    <div style={{ marginTop: gutterTop ? 10 : 0 }}>\n      <Title label={label} />\n      <input\n        {...inputProps}\n        style={{\n          width: '100%',\n          fontSize: '1rem',\n          padding: 5\n        }}\n      />\n    </div>\n  );\n}\n\nInputArea.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  gutterTop: PropTypes.bool\n}\n\nexport default InputArea;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Downshift from 'downshift';\nimport InputArea from './InputArea';\n\nconst listContainerStyles = {\n  maxHeight: '300px',\n  overflow: 'scroll',\n  width: '-webkit-fill-available',\n  boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n  position: 'absolute',\n  zIndex: 9999\n}\n\nconst listStyles = {\n  listStyleType: 'none',\n  paddingInlineStart: 0,\n  marginBlockStart: 0,\n  marginBlockEnd: 0\n}\n\nconst listItemStyles = {\n  cursor: 'pointer',\n  padding: 10,\n  fontSize: '1rem'\n}\n\nfunction ListItem(props) {\n  const { value, highlighted, selected, ...other } = props;\n\n  return (\n    <li\n      style={{\n        backgroundColor: highlighted ? 'lightgray' : 'white',\n        fontWeight: selected ? 'bold' : 'normal',\n        ...listItemStyles\n      }}\n      { ...other }\n    >\n      { value }\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  value: PropTypes.string.isRequired,\n  highlighted: PropTypes.bool.isRequired,\n  selected: PropTypes.bool.isRequired\n}\n\nfunction ControlledAutocomplete(props) {\n  const {\n    onInputChange,\n    onInputClick,\n    items,\n    label,\n    gutterTop,\n    ...rest } = props;\n\n  const getFiltration = (data, condition) => {\n    return data.filter(item => !condition || item.value.toLowerCase().includes(condition.toLowerCase()));\n  }\n\n  return (\n    <Downshift {...rest}>\n      {({\n        getInputProps,\n        getItemProps,\n        isOpen,\n        inputValue,\n        highlightedIndex,\n        selectedItem\n      }) => (\n        <div style={{\n          flexGrow: 1,\n          position: 'relative'\n        }}>\n          <InputArea\n            label={label}\n            gutterTop={gutterTop}\n            {...getInputProps({\n              onClick: onInputClick,\n              onChange: onInputChange,\n              onBlur: onInputChange\n            })}\n          />\n          { isOpen &&\n            <div style={listContainerStyles}>\n              <ul style={listStyles}>\n                { getFiltration(items, inputValue)\n                  .map((item, index) => (\n                    <ListItem\n                      key={item.value}\n                      value={item.value}\n                      highlighted={highlightedIndex === index}\n                      selected={selectedItem === item}\n                      { ...getItemProps({ item }) }\n                    />\n                  ))\n                }\n              </ul>\n            </div>\n          }\n        </div>\n      )}\n    </Downshift>\n  );\n}\n\nControlledAutocomplete.propTypes = {\n  onInputChange: PropTypes.func.isRequired,\n  onInputClick: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n  label: PropTypes.string.isRequired,\n  gutterTop: PropTypes.bool\n}\n\nfunction Autocomplete(props) {\n  const { label, suggestions, onChange, gutterTop } = props;\n  const [ state, setState ] = useState({\n    selectedItem: '',\n    inputValue: '',\n    isOpen: false\n  });\n\n  useEffect(() => {\n    if (suggestions.length === 0) {\n      clearSelection();\n    }\n  }, [ suggestions ]);\n\n  const handleSelectChange = selectedItem => {\n    if (selectedItem !== state.selectedItem) {\n      setState({\n        ...state,\n        selectedItem: selectedItem,\n        isOpen: false\n      });\n      onChange(selectedItem);\n    }\n  }\n\n  const handleStateChange = changes => {\n    let {\n      selectedItem = state.selectedItem,\n      isOpen = state.isOpen,\n      inputValue = state.inputValue\n    } = changes;\n    setState({\n      selectedItem,\n      isOpen,\n      inputValue\n    });\n  }\n\n  const handleInputChange = event => {\n    const value = event.target.value;    \n    let nextState = {...state};\n    nextState.inputValue = value;\n    if (suggestions.includes(value)) {\n      nextState.selectedItem = value;\n    }\n    setState(nextState);\n  }\n\n  const handleInputClick = () => {\n    setState({ ...state, isOpen: true });\n  }\n\n  const clearSelection = () => {\n    setState({\n      selectedItem: '',\n      inputValue: '',\n      isOpen: false\n    });\n  }\n\n  return (\n    <ControlledAutocomplete\n      items={suggestions}\n      isOpen={state.isOpen}\n      selectedItem={state.selectedItem}\n      inputValue={state.inputValue}\n      onChange={handleSelectChange}\n      onStateChange={handleStateChange}\n      onInputChange={handleInputChange}\n      onInputClick={handleInputClick}\n      label={label}\n      gutterTop={gutterTop}\n      itemToString={ item => (item ? item.value : '') }\n    />\n  );\n}\n\nAutocomplete.propTypes = {\n  label: PropTypes.string.isRequired,\n  suggestions: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  gutterTop: PropTypes.bool\n}\n\nexport default Autocomplete;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from './Autocomplete';\nimport InputArea from './InputArea';\n\nfunction SelectAuto(props) {\n  const { onChange } = props;\n  const [ carMarks, setCarMarks ] = useState([]);\n  const [ carModels, setCarModels ] = useState([]);\n  const [ mark, setMark ] = useState({\n    selectedValue: null,\n    inputValue: null\n  });\n  const [ model, setModel ] = useState({\n    selectedValue: null,\n    inputValue: null\n  });\n\n  // Получение списка марок\n  useEffect(() => {\n    let isMounted = true;\n\n    const getData = async () => {\n      const response = await fetch(\n        'https://nadins.solutionfactory.ru/api/order/suggestions?type=carMark',\n        { method: 'GET' }\n      );\n      const data = await response.json();\n      if (isMounted) {\n        setCarMarks(data.data);\n      }\n    }\n    getData();\n\n    return () => isMounted = false;\n  }, []);\n\n  // Получение списка моделей\n  useEffect(() => {\n    let isAllFilled = true;\n\n    if (mark.selectedValue && model.selectedValue) {\n      if ((mark.inputValue !== null && !mark.inputValue.trim()) ||\n          (model.inputValue !== null && !model.inputValue.trim())) {\n            isAllFilled = false;\n          }\n    }\n    else {\n      isAllFilled = false;\n    }\n    if (isAllFilled) {\n      let data = {};\n      if (mark.inputValue !== null) {\n        data.markSelected = mark.selectedValue.value;\n        data.mark = mark.inputValue;\n      }\n      else {\n        data.mark = mark.selectedValue.value;\n      }\n\n      const { value, ...rest } = model.selectedValue;\n      Object.assign(data, rest);\n\n      if (model.inputValue !== null) {\n        data.modelSelected = value;\n        data.model = model.inputValue;\n      }\n      else {\n        data.model = value;\n      }\n      onChange(data);\n    }\n    else {\n      onChange({});\n    }\n  }, [mark, model, onChange]);\n\n  const isEmptyOrNull = value => {\n    return !value || !value.trim();\n  }\n\n  const handleMarkChange = event => {\n    const value = event.target.value;\n    if (isEmptyOrNull(value)) {\n      setModel({\n        selectedValue: null,\n        inputValue: null\n      });\n    }\n    setMark({ ...mark, inputValue: value });\n  }\n\n  const handleModelChange = event => {\n    const value = event.target.value;\n    setModel({ ...model, inputValue: value });\n  }\n\n  const handleSelectMarkChange = item => {\n    setModel({\n      selectedValue: null,\n      inputValue: null\n    });\n    setCarModels([]);\n\n    const getData = async () => {\n      const response = await fetch(\n        'https://nadins.solutionfactory.ru/api/order/suggestions?type=carModel&mark=' + item.value,\n        { method: 'GET' }\n      );\n      const data = await response.json();\n      setCarModels(data.data);\n    }\n    getData();\n\n    setMark({\n      selectedValue: item,\n      inputValue: item.value.includes('Другая марка') ? '' : null\n    });\n  }\n\n  const handleSelectModelChange = item => {\n    setModel({\n      selectedValue: item,\n      inputValue: item.value.includes('Другая модель') ? '' : null\n    });\n  }\n\n  const isModelInputOpen = mark.selectedValue\n    ? mark.inputValue !== null\n      ? mark.inputValue.trim()\n      : true\n    : false;\n\n  return (\n    <div>\n      <Autocomplete\n        label=\"Выберите марку автомобиля\"\n        suggestions={carMarks}\n        onChange={handleSelectMarkChange}\n      />\n\n      { mark.inputValue !== null &&\n        <InputArea\n          label=\"Укажите марку автомобиля\"\n          value={mark.inputValue}\n          onChange={handleMarkChange}\n          gutterTop\n        />\n      }\n\n      {isModelInputOpen &&\n        <Autocomplete\n          label=\"Выберите модель автомобиля\"\n          suggestions={carModels}\n          onChange={handleSelectModelChange}\n          gutterTop\n        />\n      }\n\n      { model.inputValue !== null &&\n        <InputArea\n          label=\"Укажите модель автомобиля\"\n          // value={modelInput.value}\n          value={model.inputValue}\n          onChange={handleModelChange}\n          gutterTop\n        />\n      }\n    </div>\n  );\n}\n\nSelectAuto.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nexport default SelectAuto;\n","import React, { useState } from 'react';\nimport SelectAuto from './SelectAuto';\n\nfunction App() {\n  const [ data, setData ] = useState('');\n\n  const handleChange = data => {\n    setData(JSON.stringify(data, null, '\\t'));\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column'\n    }}>\n      <div style={{\n        width: '40%',\n        borderRadius: 5,\n        boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\n        padding: 30,\n        margin: 'auto'\n      }}>\n        <SelectAuto onChange={handleChange} />\n      </div>\n      <div style={{\n        marginTop: 15,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        whiteSpace: 'pre'\n      }}>\n        { data }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}